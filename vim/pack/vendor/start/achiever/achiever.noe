- side: @achiever feature add
  -- task body completion without the need of underscored?

Method {{{ Tue 8 Oct 2024

There are 3 families of tasks:

- 'main' refers to the primary project. Ideally, there should be one main
  project (though multiple are allowed). It’s the project that should receive
  most of your focus.

  Ex. Your company.

- 'side' encompasses side work, such as side projects or any tasks that
  indirectly support your main project. It includes anything that isn’t
  categorized as 'main' or 'life.'

  Ex. A language you are learning, a topic you are studying, a side project you
  are building, a tool configuration you are refining.

- 'life' includes all essential life-related tasks life family, friends,
  health, finances.

- main: @project_name category action -- details
- main: @achiever method update -- semantic definition
  -- each project must have its own set of categories with their actions
  -- don't be afraid to develop in details

- side: @project_name category action -- details
- side: work_target category action -- details
- side: iphone settings update -- wallpaper
  -- the project '@' is reserved to actual side projects name

- life: no semantic but keep it less than 2-4 words -- develop in details

In addition: ( date / estimates ) and { feedbacks }

For ease, but also the relevance to the purpose of a to-do list, I never use
upper-cases in an 'achiever' file.

}}}

Method {{{ Sat 12 Oct 2024 1

There are 3 families of tasks:

- 'main' refers to the primary project. Ideally, there should be one main
  project (though multiple are allowed). It’s the project that should receive
  most of your focus.

  Ex. Your company.

- 'side' encompasses side work, such as side projects or any tasks that
  indirectly support your main project. It includes anything that isn’t
  categorized as 'main' or 'life.'

  Ex. A language you are learning, a topic you are studying, a side project you
  are building, a tool configuration you are refining.

- 'life' includes all essential life-related tasks life family, friends,
  health, finances.

- main: @project_name category action -- details
- main: @achiever method update -- semantic definition
  -- each project must have its own set of categories with their actions
  -- don't be afraid to develop in details

- side: @project_name category action -- details

- side: action [category] target -- details
- life: action [category] target -- details
  -- the task's body should not be longer than 3 words
  -- develop in details
- life: visit movie theater -- beetlejuice with innraz
- side: update phone config -- wallpaper
  -- the project '@' is reserved to actual side projects name

In addition: ( date / estimates ) and { feedbacks }

For ease, but also the relevance to the purpose of a to-do list, I never use
upper-cases in an 'achiever' file.

}}}

Method {{{ Sat 12 Oct 2024 2

There are 3 families of tasks:

- 'main' refers to the primary project. Ideally, there should be one main
  project (though multiple are allowed). It’s the project that should receive
  most of your focus.

  Ex. Your company.

- 'side' encompasses side work, such as side projects or any tasks that
  indirectly support your main project. It includes anything that isn’t
  categorized as 'main' or 'life.'

  Ex. A language you are learning, a topic you are studying, a side project you
  are building, a tool configuration you are refining.

- 'life' includes all essential life-related tasks life family, friends,
  health, finances.

- main: @namespace action [category] target -- details
- side: @namespace action [category] target -- details
  -- the project '@' is used to highlight actual project's names

- side: action [category] target -- details
- life: action [category] target -- details
  -- the task's body should not be longer than 3 words
  -- don't be afraid to develop in details

- life: visit movie theater -- beetlejuice with innraz
- side: update phone config -- wallpaper
- main: @achiever method update -- semantic definition

In addition: ( date / estimates ), (obliged to), (deviate to), { feedbacks }

For ease, but also the relevance to the purpose of a to-do list, I never use
upper-cases in an 'achiever' file.

}}}


Tasks with @project are scoped by this project.

- main: @geaverse update todos

- side: @noesis update
- side: @achiever update

- side: update habits trackers
- side: update expenses tracking
- side: update journal
- side: update todos
- side: cleanup todos history
- side: update listen notes

Example
- side: @achiever update methodology -- tasks semantic definition   = update my todos' tool logic
- side: cleanup todos history                                       = update my todos' data

Clear: Focuses on removing objects or obstacles from a space. Example: "Clear the table" (remove everything from the table).
Tidy: Refers to organizing and arranging things neatly. Example: "Tidy your room" (put things in their proper places).
Clean up: Involves both removing dirt and organizing, making a space both tidy and hygienic. Example: "Clean up the kitchen" (wipe surfaces, put away items, and remove dirt).
