#!/bin/bash

# @author       clemedon (ClÃ©ment Vidon)
# @brief        Rename pictures based on their creation date and file size
#
# Also generate a hidden undo script in the target directory.
#
# Depends on: exiftool

# @param[in]    a directory that contains the files to rename
# @see http://mywiki.wooledge.org/ParsingLs
#!/bin/bash

if [ ! $1 ]; then
    echo "You have to specify a target directory"
    exit
fi
#!/bin/bash

if [ ! $1 ]; then
    echo "You have to specify a target directory"
    exit
fi

# Create the undo script in the target directory
undo_script="$1/.undo_$(date +"%g%m%d%H%M%S").sh"
echo "#!/bin/bash" > "$undo_script"
chmod +x "$undo_script"

# Regex pattern to match files that start with "CV", 12 digits, an underscore, 8 digits, and an underscore
pattern="^CV_[0-9]{12}_[0-9]{8}\."

# Rename files based on their EXIF DateTimeOriginal and size
for f in "$1"/*; do
    if [ -f "$f" ]; then
        # Skip files that already match the pattern
        basename_f=$(basename "$f")
        if [[ "$basename_f" =~ $pattern ]]; then
            echo "Skipping already renamed file: $f"
            continue
        fi

        # Get the creation date from EXIF metadata in YYMMDDHHMMSS format
        exif_date=$(exiftool -DateTimeOriginal -d "%y%m%d%H%M%S" "$f" | awk -F': ' '{print $2}')

        if [ -z "$exif_date" ]; then
            echo "No DateTimeOriginal found for $f, skipping..."
            continue
        fi

        # Get the file size in bytes, padded to 8 characters
        filesize=$(stat -c%s "$f")
        id=$(printf "%08d" "$filesize")

        # Define the new filename prefixed with "CV"
        ext="${f##*.}"
        newfile="$1/CV_${exif_date}_${id}.$ext"

        # Rename the file and log the undo command
        mv -vn "$f" "$newfile"
        echo "mv -v \"$newfile\" \"$f\"" >> "$undo_script"
    fi
done
